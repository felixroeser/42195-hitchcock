global
    pidfile /var/run/haproxy.pid
    log 127.0.0.1 local0 info
    user haproxy
    group haproxy
    # daemon

defaults
    mode http

    clitimeout          600000   # maximum inactivity time on the client side
    srvtimeout          600000   # maximum inactivity time on the server side
    timeout connect     8000     # maximum time to wait for a connection attempt to a server to succeed

    stats enable
    stats auth    admin:password
    stats uri   /monitor
    stats refresh 5s
    # option httpchk  GET /status
    retries   5
    option redispatch

    balance roundrobin  # each server is used in turns, according to assigned weight

frontend http
    bind :80
    monitor-uri   /haproxy  # end point to monitor HAProxy status (returns 200)

    acl marathon hdr_end(host) -i marathon.director.<%= @cluster %>.<%= @env %>
    acl mesos hdr_end(host) -i mesos.director.<%= @cluster %>.<%= @env %>
    use_backend marathon if marathon
    use_backend mesos if mesos

    <% # FIXME don't need that many backends %>
    <% @reduced_endpoints.each do |app, versions| %>
    <% versions.each do |a, data| %>
    <% v = a.size == 0 ? '' : "-v#{a.join('.')}" 
       name = "#{app}#{v}" %>
    acl <%= name %> hdr_end(host) -i <%= name %>.director.<%= @cluster %>.<%= @env %>
    use_backend <%= name %> if <%= name %>
    <% end %>
    <% end %>

backend marathon
    option httpclose

    <% @marathon_instances.each_with_index do |m, index| %>
    server <%= "marathon-#{index}" %> <%= m %> weight 1 maxconn 50 check inter 4000
    <% end %>

backend mesos
    option httpclose

    <% @mesos_instances.each_with_index do |m, index| %>
    server <%= "marathon-#{index}" %> <%= m %> weight 1 maxconn 50 check inter 4000
    <% end %>

<% @reduced_endpoints.each do |app, versions| %>
<% versions.each do |a, data| %>
<% v = a.size == 0 ? '' : "-v#{a.join('.')}" 
   name = "#{app}#{v}" %>
backend <%= name %>
  option httpclose
  <% data['instances'].each_with_index do |instance, index| %>
  <% instance['ports'].each_with_index do |port, port_index| %>
  server <%= "#{name}-#{index}-#{port_index}" %> <%= "#{instance['host']}:#{port}" %> weight 1 maxconn 50 inter 4000
  <% end %>
  <% end %>
<% end %>
<% end %>

